{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\junis\\\\Desktop\\\\devweb0504\\\\minha-aplicacao-graphql\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { ApolloProvider, useQuery, gql } from '@apollo/client';\nimport client from './ApolloClient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_POKEMON_INFO = gql`\n  {\n    pokemons(first: 5) {\n      id\n      name\n      image\n    }\n  }\n`;\nfunction PokemonList() {\n  _s();\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_POKEMON_INFO);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Carregando...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Erro :(\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 21\n  }, this);\n  return data.pokemons.map(({\n    id,\n    name,\n    image\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: image,\n      alt: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this));\n}\n_s(PokemonList, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\n_c = PokemonList;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: client,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Minha Primeira Aplica\\xE7\\xE3o GraphQL \\uD83D\\uDE80\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PokemonList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"PokemonList\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","ApolloProvider","useQuery","gql","client","jsxDEV","_jsxDEV","GET_POKEMON_INFO","PokemonList","_s","loading","error","data","children","fileName","_jsxFileName","lineNumber","columnNumber","pokemons","map","id","name","image","src","alt","_c","App","_c2","$RefreshReg$"],"sources":["C:/Users/junis/Desktop/devweb0504/minha-aplicacao-graphql/src/App.js"],"sourcesContent":["import React from 'react';\nimport { ApolloProvider, useQuery, gql } from '@apollo/client';\nimport client from './ApolloClient';\n\nconst GET_POKEMON_INFO = gql`\n  {\n    pokemons(first: 5) {\n      id\n      name\n      image\n    }\n  }\n`;\n\nfunction PokemonList() {\n  const { loading, error, data } = useQuery(GET_POKEMON_INFO);\n\n  if (loading) return <p>Carregando...</p>;\n  if (error) return <p>Erro :(</p>;\n\n  return data.pokemons.map(({ id, name, image }) => (\n    <div key={id}>\n      <p>{name}</p>\n      <img src={image} alt={name} />\n    </div>\n  ));\n}\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <div>\n        <h2>Minha Primeira AplicaÃ§Ã£o GraphQL ðŸš€</h2>\n        <PokemonList />\n      </div>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,EAAEC,QAAQ,EAAEC,GAAG,QAAQ,gBAAgB;AAC9D,OAAOC,MAAM,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,gBAAgB,GAAGJ,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,SAASK,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM;IAAEC,OAAO;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAGV,QAAQ,CAACK,gBAAgB,CAAC;EAE3D,IAAIG,OAAO,EAAE,oBAAOJ,OAAA;IAAAO,QAAA,EAAG;EAAa;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EACxC,IAAIN,KAAK,EAAE,oBAAOL,OAAA;IAAAO,QAAA,EAAG;EAAO;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAEhC,OAAOL,IAAI,CAACM,QAAQ,CAACC,GAAG,CAAC,CAAC;IAAEC,EAAE;IAAEC,IAAI;IAAEC;EAAM,CAAC,kBAC3ChB,OAAA;IAAAO,QAAA,gBACEP,OAAA;MAAAO,QAAA,EAAIQ;IAAI;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACbX,OAAA;MAAKiB,GAAG,EAAED,KAAM;MAACE,GAAG,EAAEH;IAAK;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,GAFtBG,EAAE;IAAAN,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGP,CACN,CAAC;AACJ;AAACR,EAAA,CAZQD,WAAW;EAAA,QACeN,QAAQ;AAAA;AAAAuB,EAAA,GADlCjB,WAAW;AAcpB,SAASkB,GAAGA,CAAA,EAAG;EACb,oBACEpB,OAAA,CAACL,cAAc;IAACG,MAAM,EAAEA,MAAO;IAAAS,QAAA,eAC7BP,OAAA;MAAAO,QAAA,gBACEP,OAAA;QAAAO,QAAA,EAAI;MAAmC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5CX,OAAA,CAACE,WAAW;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAErB;AAACU,GAAA,GATQD,GAAG;AAWZ,eAAeA,GAAG;AAAC,IAAAD,EAAA,EAAAE,GAAA;AAAAC,YAAA,CAAAH,EAAA;AAAAG,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}